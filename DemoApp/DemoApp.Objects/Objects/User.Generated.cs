using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Simple.Objects;

#nullable enable

namespace DemoApp.Objects
{
    #region |   Code Generated by Simple.Objects Code Generator   |

    partial class User
    {
        #region |   Protected Members   |

        protected long defaultDhcpDnsServerNetworkGroupId, oldDefaultDhcpDnsServerNetworkGroupId;
        protected string description = String.Empty, oldDescription = String.Empty;
        protected string firstName = String.Empty, oldFirstName = String.Empty;
        protected string lastName = String.Empty, oldLastName = String.Empty;
        protected string username = String.Empty, oldUsername = String.Empty;
        protected string passwordHash = String.Empty, oldPasswordHash = String.Empty;
        protected string location = String.Empty, oldLocation = String.Empty;
        protected bool disabled, oldDisabled;
        protected int codePage, oldCodePage;
        protected DefaultSecurityPolicy defaultGraphPolicy, oldDefaultGraphPolicy;
        protected DefaultSecurityPolicy defaultObjectPolicy, oldDefaultObjectPolicy;

        #endregion |   Protected Members   |

        #region |   Private Static Members   |

        private static Func<User, object?>[] GetFieldValueMethods;
        private static Func<User, object?>[] GetOldFieldValueMethods;
        private static Action<User, object>[] SetFieldValueMethods;
        private static Action<User, object>[] SetOldFieldValueMethods;

        #endregion |   Private Static Members   |

        #region |   Static Methods Initialization   |

        static User()
        {
            int maxIndex = UserModel.PropertyModel.GetCollection().GetMaxIndex();

            GetFieldValueMethods = new Func<User, object?>[maxIndex + 1];
            GetFieldValueMethods[UserModel.PropertyModel.Id.PropertyIndex]                                 = (item) => item.id;
            GetFieldValueMethods[UserModel.PropertyModel.PreviousId.PropertyIndex]                         = (item) => item.previousId;
            GetFieldValueMethods[UserModel.PropertyModel.Description.PropertyIndex]                        = (item) => item.description;
            GetFieldValueMethods[UserModel.PropertyModel.FirstName.PropertyIndex]                          = (item) => item.firstName;
            GetFieldValueMethods[UserModel.PropertyModel.LastName.PropertyIndex]                           = (item) => item.lastName;
            GetFieldValueMethods[UserModel.PropertyModel.Username.PropertyIndex]                           = (item) => item.username;
            GetFieldValueMethods[UserModel.PropertyModel.PasswordHash.PropertyIndex]                       = (item) => item.passwordHash;
            GetFieldValueMethods[UserModel.PropertyModel.Location.PropertyIndex]                           = (item) => item.location;
            GetFieldValueMethods[UserModel.PropertyModel.Disabled.PropertyIndex]                           = (item) => item.disabled;
            GetFieldValueMethods[UserModel.PropertyModel.CodePage.PropertyIndex]                           = (item) => item.codePage;
            GetFieldValueMethods[UserModel.PropertyModel.DefaultGraphPolicy.PropertyIndex]                 = (item) => item.defaultGraphPolicy;
            GetFieldValueMethods[UserModel.PropertyModel.DefaultObjectPolicy.PropertyIndex]                = (item) => item.defaultObjectPolicy;
            GetFieldValueMethods[UserModel.PropertyModel.OrderIndex.PropertyIndex]                         = (item) => item.orderIndex;

            GetOldFieldValueMethods = new Func<User, object?>[maxIndex + 1];
            GetOldFieldValueMethods[UserModel.PropertyModel.Id.PropertyIndex]                                 = (item) => item.oldId;
            GetOldFieldValueMethods[UserModel.PropertyModel.PreviousId.PropertyIndex]                         = (item) => item.oldPreviousId;
            GetOldFieldValueMethods[UserModel.PropertyModel.Description.PropertyIndex]                        = (item) => item.oldDescription;
            GetOldFieldValueMethods[UserModel.PropertyModel.FirstName.PropertyIndex]                          = (item) => item.oldFirstName;
            GetOldFieldValueMethods[UserModel.PropertyModel.LastName.PropertyIndex]                           = (item) => item.oldLastName;
            GetOldFieldValueMethods[UserModel.PropertyModel.Username.PropertyIndex]                           = (item) => item.oldUsername;
            GetOldFieldValueMethods[UserModel.PropertyModel.PasswordHash.PropertyIndex]                       = (item) => item.oldPasswordHash;
            GetOldFieldValueMethods[UserModel.PropertyModel.Location.PropertyIndex]                           = (item) => item.oldLocation;
            GetOldFieldValueMethods[UserModel.PropertyModel.Disabled.PropertyIndex]                           = (item) => item.oldDisabled;
            GetOldFieldValueMethods[UserModel.PropertyModel.CodePage.PropertyIndex]                           = (item) => item.oldCodePage;
            GetOldFieldValueMethods[UserModel.PropertyModel.DefaultGraphPolicy.PropertyIndex]                 = (item) => item.oldDefaultGraphPolicy;
            GetOldFieldValueMethods[UserModel.PropertyModel.DefaultObjectPolicy.PropertyIndex]                = (item) => item.oldDefaultObjectPolicy;
            GetOldFieldValueMethods[UserModel.PropertyModel.OrderIndex.PropertyIndex]                         = (item) => item.oldOrderIndex;

            SetFieldValueMethods = new Action<User, object>[maxIndex + 1];
            SetFieldValueMethods[UserModel.PropertyModel.Id.PropertyIndex]                                 = (item, value) => item.id = (long)value;
            SetFieldValueMethods[UserModel.PropertyModel.PreviousId.PropertyIndex]                         = (item, value) => item.previousId = (long)value;
            SetFieldValueMethods[UserModel.PropertyModel.Description.PropertyIndex]                        = (item, value) => item.description = (string)value;
            SetFieldValueMethods[UserModel.PropertyModel.FirstName.PropertyIndex]                          = (item, value) => item.firstName = (string)value;
            SetFieldValueMethods[UserModel.PropertyModel.LastName.PropertyIndex]                           = (item, value) => item.lastName = (string)value;
            SetFieldValueMethods[UserModel.PropertyModel.Username.PropertyIndex]                           = (item, value) => item.username = (string)value;
            SetFieldValueMethods[UserModel.PropertyModel.PasswordHash.PropertyIndex]                       = (item, value) => item.passwordHash = (string)value;
            SetFieldValueMethods[UserModel.PropertyModel.Location.PropertyIndex]                           = (item, value) => item.location = (string)value;
            SetFieldValueMethods[UserModel.PropertyModel.Disabled.PropertyIndex]                           = (item, value) => item.disabled = (bool)value;
            SetFieldValueMethods[UserModel.PropertyModel.CodePage.PropertyIndex]                           = (item, value) => item.codePage = (int)value;
            SetFieldValueMethods[UserModel.PropertyModel.DefaultGraphPolicy.PropertyIndex]                 = (item, value) => item.defaultGraphPolicy = (DefaultSecurityPolicy)value;
            SetFieldValueMethods[UserModel.PropertyModel.DefaultObjectPolicy.PropertyIndex]                = (item, value) => item.defaultObjectPolicy = (DefaultSecurityPolicy)value;
            SetFieldValueMethods[UserModel.PropertyModel.OrderIndex.PropertyIndex]                         = (item, value) => item.orderIndex = (int)value;

            SetOldFieldValueMethods = new Action<User, object>[maxIndex + 1];
            SetOldFieldValueMethods[UserModel.PropertyModel.Id.PropertyIndex]                                 = (item, value) => item.oldId = (long)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.PreviousId.PropertyIndex]                         = (item, value) => item.oldPreviousId = (long)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.Description.PropertyIndex]                        = (item, value) => item.oldDescription = (string)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.FirstName.PropertyIndex]                          = (item, value) => item.oldFirstName = (string)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.LastName.PropertyIndex]                           = (item, value) => item.oldLastName = (string)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.Username.PropertyIndex]                           = (item, value) => item.oldUsername = (string)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.PasswordHash.PropertyIndex]                       = (item, value) => item.oldPasswordHash = (string)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.Location.PropertyIndex]                           = (item, value) => item.oldLocation = (string)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.Disabled.PropertyIndex]                           = (item, value) => item.oldDisabled = (bool)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.CodePage.PropertyIndex]                           = (item, value) => item.oldCodePage = (int)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.DefaultGraphPolicy.PropertyIndex]                 = (item, value) => item.oldDefaultGraphPolicy = (DefaultSecurityPolicy)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.DefaultObjectPolicy.PropertyIndex]                = (item, value) => item.oldDefaultObjectPolicy = (DefaultSecurityPolicy)value;
            SetOldFieldValueMethods[UserModel.PropertyModel.OrderIndex.PropertyIndex]                         = (item, value) => item.oldOrderIndex = (int)value;
        }

        #endregion |   Static Methods Initialization   |

        #region |   Properties by Object Property Model   |

        /// <summary>
        /// Gets DefaultDhcpDnsServerNetworkGroupId
        /// </summary>
        protected long DefaultDhcpDnsServerNetworkGroupId
        {
            get { return this.defaultDhcpDnsServerNetworkGroupId; }
		}

        /// <summary>
        /// Gets or sets Description
        /// </summary>
        public string Description
        {
            get { return this.description; }
            set { this.SetPropertyValue(UserModel.PropertyModel.Description, value); }
		}

        /// <summary>
        /// Gets or sets FirstName
        /// </summary>
        public string FirstName
        {
            get { return this.firstName; }
            set { this.SetPropertyValue(UserModel.PropertyModel.FirstName, value); }
		}

        /// <summary>
        /// Gets or sets LastName
        /// </summary>
        public string LastName
        {
            get { return this.lastName; }
            set { this.SetPropertyValue(UserModel.PropertyModel.LastName, value); }
		}

        /// <summary>
        /// Gets or sets Username
        /// </summary>
        public string Username
        {
            get { return this.username; }
            set { this.SetPropertyValue(UserModel.PropertyModel.Username, value); }
		}

        /// <summary>
        /// Gets or sets PasswordHash
        /// </summary>
        public string PasswordHash
        {
            get { return this.passwordHash; }
            set { this.SetPropertyValue(UserModel.PropertyModel.PasswordHash, value); }
		}

        /// <summary>
        /// Gets or sets Location
        /// </summary>
        public string Location
        {
            get { return this.location; }
            set { this.SetPropertyValue(UserModel.PropertyModel.Location, value); }
		}

        /// <summary>
        /// Gets or sets Disabled
        /// </summary>
        public bool Disabled
        {
            get { return this.disabled; }
            set { this.SetPropertyValue(UserModel.PropertyModel.Disabled, value); }
		}

        /// <summary>
        /// Gets or sets CodePage
        /// </summary>
        public int CodePage
        {
            get { return this.codePage; }
            set { this.SetPropertyValue(UserModel.PropertyModel.CodePage, value); }
		}

        /// <summary>
        /// Gets or sets DefaultGraphPolicy
        /// </summary>
        public DefaultSecurityPolicy DefaultGraphPolicy
        {
            get { return this.defaultGraphPolicy; }
            set { this.SetPropertyValue(UserModel.PropertyModel.DefaultGraphPolicy, value); }
		}

        /// <summary>
        /// Gets or sets DefaultObjectPolicy
        /// </summary>
        public DefaultSecurityPolicy DefaultObjectPolicy
        {
            get { return this.defaultObjectPolicy; }
            set { this.SetPropertyValue(UserModel.PropertyModel.DefaultObjectPolicy, value); }
		}

        #endregion |   Properties by Object Property Model   |

        #region |   One-To-Many Relation Properties   |

        /// <summary>
        /// Gets one-to-many relation foreign GraphElements collection.
        /// </summary>
        public override SimpleObjectCollection<GraphElement> GraphElements
        {
            get { return this.GetOneToManyForeignObjectCollection<GraphElement>(RelationPolicyModelBase.OneToManyGraphElementToSimpleObject); }
        }

        #endregion |   One-To-Many Relation Properties   |

        #region |   Many-To-Many Relation Properties   |

        /// <summary>
        /// Gets many-to-many relation UserGroups collection.
        /// </summary>
        public SimpleObjectCollection<UserGroup> UserGroups
        {
            get { return this.GetGroupMemberCollection<UserGroup>(RelationPolicyModel.ManyToManyUserToUserGroup); }
        }

        #endregion |   Many-To-Many Relation Properties   |

        #region |   Public Overriden Methods   |

        /// <summary>
        /// Gets the UserModel definition instance.
        /// </summary>
        public override ISimpleObjectModel GetModel()
        {
            return UserModel.Instance; 
        }

        /// <summary>
        /// Gets the one-to-many collection based on relation key. If no one-to-many relation specified in relation model for this object, the base class method is called.
        /// </summary>
        /// <param name="relationKey">The one-to-many relation key</param>
        /// <returns>The <see cref="SimpleObjectCollection?"/> result.</returns>
        public override SimpleObjectCollection? GetOneToManyForeignObjectCollection(int relationKey)
        {
            //if (relationKey == RelationPolicyModelBase.OneToManyGraphElementToSimpleObject.RelationKey)
            //{
            //    return this.GraphElements;
            //}
            //else if (relationKey == RelationPolicyModel.OneToManyUserPolicyToUserObject.RelationKey)
            //{
            //    return null;
            //}

            return base.GetOneToManyForeignObjectCollection(relationKey);
        }

        /// <summary>
        /// Gets the group member collection based on relation key. If no many-to-many relation specified in relation model for this object, the base class method is called.
        /// </summary>
        /// <param name="relationKey">The many-to-many relation key</param>
        /// <returns>The <see cref="SimpleObjectCollection?"/> result.</returns>
        public override SimpleObjectCollection? GetGroupMemberCollection(int relationKey)
        {
            if (relationKey == RelationPolicyModel.ManyToManyUserToUserGroup.RelationKey)
                return this.UserGroups;

            return base.GetGroupMemberCollection(relationKey);
        }

        #endregion |   Public Overriden Methods   |

        #region |   Protected Abstract Overriden Methods  |

        /// <summary>
        /// Gets field property value by property index.
        /// </summary>
        protected override object? GetFieldValue(int propertyIndex)
        {
            return GetFieldValueMethods[propertyIndex](this);
        }

        /// <summary>
        /// Gets field old property value by property index.
        /// </summary>
        protected override object? GetOldFieldValue(int propertyIndex)
        {
            return GetOldFieldValueMethods[propertyIndex](this);
        }

        /// <summary>
        /// Sets field property value by property index.
        /// </summary>
        protected override void SetFieldValue(int propertyIndex, object value)
        {
            SetFieldValueMethods[propertyIndex](this, value);
        }

        /// <summary>
        /// Sets field old property value by property index.
        /// </summary>
        protected override void SetOldFieldValue(int propertyIndex, object value)
        {
            SetOldFieldValueMethods[propertyIndex](this, value);
        }

        #endregion |   Protected Abstract Overriden Methods  |
    }

    #endregion |   Code Generated by Simple.Objects Code Generator   |
}
