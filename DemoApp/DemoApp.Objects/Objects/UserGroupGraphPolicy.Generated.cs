using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Simple.Objects;

#nullable enable

namespace DemoApp.Objects
{
    #region |   Code Generated by Simple.Objects Code Generator   |

    partial class UserGroupGraphPolicy
    {
        #region |   Protected Members   |

        protected long previousId, oldPreviousId;
        protected long userGroupId, oldUserGroupId;
        protected long graphElementId, oldGraphElementId;
        protected int graphKey, oldGraphKey;
        protected UserPolicyRights policyRights, oldPolicyRights;
        protected int orderIndex, oldOrderIndex;

        #endregion |   Protected Members   |

        #region |   Private Static Members   |

        private static Func<UserGroupGraphPolicy, object?>[] GetFieldValueMethods;
        private static Func<UserGroupGraphPolicy, object?>[] GetOldFieldValueMethods;
        private static Action<UserGroupGraphPolicy, object>[] SetFieldValueMethods;
        private static Action<UserGroupGraphPolicy, object>[] SetOldFieldValueMethods;

        #endregion |   Private Static Members   |

        #region |   Static Methods Initialization   |

        static UserGroupGraphPolicy()
        {
            int maxIndex = UserGroupGraphPolicyModel.PropertyModel.GetCollection().GetMaxIndex();

            GetFieldValueMethods = new Func<UserGroupGraphPolicy, object?>[maxIndex + 1];
            GetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.Id.PropertyIndex]             = (item) => item.id;
            GetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.PreviousId.PropertyIndex]     = (item) => item.previousId;
            GetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.UserGroupId.PropertyIndex]    = (item) => item.userGroupId;
            GetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.GraphElementId.PropertyIndex] = (item) => item.graphElementId;
            GetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.GraphKey.PropertyIndex]       = (item) => item.graphKey;
            GetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.PolicyRights.PropertyIndex]   = (item) => item.policyRights;
            GetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.OrderIndex.PropertyIndex]     = (item) => item.orderIndex;

            GetOldFieldValueMethods = new Func<UserGroupGraphPolicy, object?>[maxIndex + 1];
            GetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.Id.PropertyIndex]             = (item) => item.oldId;
            GetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.PreviousId.PropertyIndex]     = (item) => item.oldPreviousId;
            GetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.UserGroupId.PropertyIndex]    = (item) => item.oldUserGroupId;
            GetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.GraphElementId.PropertyIndex] = (item) => item.oldGraphElementId;
            GetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.GraphKey.PropertyIndex]       = (item) => item.oldGraphKey;
            GetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.PolicyRights.PropertyIndex]   = (item) => item.oldPolicyRights;
            GetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.OrderIndex.PropertyIndex]     = (item) => item.oldOrderIndex;

            SetFieldValueMethods = new Action<UserGroupGraphPolicy, object>[maxIndex + 1];
            SetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.Id.PropertyIndex]             = (item, value) => item.id = (long)value;
            SetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.PreviousId.PropertyIndex]     = (item, value) => item.previousId = (long)value;
            SetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.UserGroupId.PropertyIndex]    = (item, value) => item.userGroupId = (long)value;
            SetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.GraphElementId.PropertyIndex] = (item, value) => item.graphElementId = (long)value;
            SetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.GraphKey.PropertyIndex]       = (item, value) => item.graphKey = (int)value;
            SetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.PolicyRights.PropertyIndex]   = (item, value) => item.policyRights = (UserPolicyRights)value;
            SetFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.OrderIndex.PropertyIndex]     = (item, value) => item.orderIndex = (int)value;

            SetOldFieldValueMethods = new Action<UserGroupGraphPolicy, object>[maxIndex + 1];
            SetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.Id.PropertyIndex]             = (item, value) => item.oldId = (long)value;
            SetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.PreviousId.PropertyIndex]     = (item, value) => item.oldPreviousId = (long)value;
            SetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.UserGroupId.PropertyIndex]    = (item, value) => item.oldUserGroupId = (long)value;
            SetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.GraphElementId.PropertyIndex] = (item, value) => item.oldGraphElementId = (long)value;
            SetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.GraphKey.PropertyIndex]       = (item, value) => item.oldGraphKey = (int)value;
            SetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.PolicyRights.PropertyIndex]   = (item, value) => item.oldPolicyRights = (UserPolicyRights)value;
            SetOldFieldValueMethods[UserGroupGraphPolicyModel.PropertyModel.OrderIndex.PropertyIndex]     = (item, value) => item.oldOrderIndex = (int)value;
        }

        #endregion |   Static Methods Initialization   |

        #region |   Properties by Object Property Model   |

        /// <summary>
        /// Gets or sets PreviousId
        /// </summary>
        public long PreviousId
        {
            get { return this.previousId; }
            protected internal set { this.SetPropertyValue(UserGroupGraphPolicyModel.PropertyModel.PreviousId, value); }
		}

        /// <summary>
        /// Gets or sets UserGroupId
        /// </summary>
        public long UserGroupId
        {
            get { return this.userGroupId; }
            set { this.SetPropertyValue(UserGroupGraphPolicyModel.PropertyModel.UserGroupId, value); }
		}

        /// <summary>
        /// Gets or sets GraphElementId
        /// </summary>
        public long GraphElementId
        {
            get { return this.graphElementId; }
            set { this.SetPropertyValue(UserGroupGraphPolicyModel.PropertyModel.GraphElementId, value); }
		}

        /// <summary>
        /// Gets or sets GraphKey
        /// </summary>
        public int GraphKey
        {
            get { return this.graphKey; }
            set { this.SetPropertyValue(UserGroupGraphPolicyModel.PropertyModel.GraphKey, value); }
		}

        /// <summary>
        /// Gets or sets PolicyRights
        /// </summary>
        public UserPolicyRights PolicyRights
        {
            get { return this.policyRights; }
            set { this.SetPropertyValue(UserGroupGraphPolicyModel.PropertyModel.PolicyRights, value); }
		}

        /// <summary>
        /// Gets or sets OrderIndex
        /// </summary>
        public int OrderIndex
        {
            get { return this.orderIndex; }
            set { this.SetPropertyValue(UserGroupGraphPolicyModel.PropertyModel.OrderIndex, value); }
		}

        #endregion |   Properties by Object Property Model   |

        #region |   One-To-Many Relation Properties   |

        /// <summary>
        /// Gets or sets one-to-many relation primary UserGroup object.
        /// </summary>
        public UserGroup UserGroup
        {
            get { return this.GetOneToManyPrimaryObject<UserGroup>(RelationPolicyModel.OneToManyUserGroupGraphPolicyToUserGroup)!; }
            set { this.SetOneToManyPrimaryObject(value, RelationPolicyModel.OneToManyUserGroupGraphPolicyToUserGroup); }
        }

        /// <summary>
        /// Gets one-to-many relation foreign GraphElements collection.
        /// </summary>
        public override SimpleObjectCollection<GraphElement> GraphElements
        {
            get { return this.GetOneToManyForeignObjectCollection<GraphElement>(RelationPolicyModelBase.OneToManyGraphElementToSimpleObject); }
        }

        #endregion |   One-To-Many Relation Properties   |

        #region |   Public Overriden Methods   |

        /// <summary>
        /// Gets the UserGroupGraphPolicyModel definition instance.
        /// </summary>
        public override ISimpleObjectModel GetModel()
        {
            return UserGroupGraphPolicyModel.Instance; 
        }

        /// <summary>
        /// Gets the one-to-many collection based on relation key. If no one-to-many relation specified in relation model for this object, the base class method is called.
        /// </summary>
        /// <param name="relationKey">The one-to-many relation key</param>
        /// <returns>The <see cref="SimpleObjectCollection?"/> result.</returns>
        public override SimpleObjectCollection? GetOneToManyForeignObjectCollection(int relationKey)
        {
            if (relationKey == RelationPolicyModelBase.OneToManyGraphElementToSimpleObject.RelationKey)
                return this.GraphElements;

            return base.GetOneToManyForeignObjectCollection(relationKey);
        }

        #endregion |   Public Overriden Methods   |

        #region |   Protected Abstract Overriden Methods  |

        /// <summary>
        /// Gets field property value by property index.
        /// </summary>
        protected override object? GetFieldValue(int propertyIndex)
        {
            return GetFieldValueMethods[propertyIndex](this);
        }

        /// <summary>
        /// Gets field old property value by property index.
        /// </summary>
        protected override object? GetOldFieldValue(int propertyIndex)
        {
            return GetOldFieldValueMethods[propertyIndex](this);
        }

        /// <summary>
        /// Sets field property value by property index.
        /// </summary>
        protected override void SetFieldValue(int propertyIndex, object value)
        {
            SetFieldValueMethods[propertyIndex](this, value);
        }

        /// <summary>
        /// Sets field old property value by property index.
        /// </summary>
        protected override void SetOldFieldValue(int propertyIndex, object value)
        {
            SetOldFieldValueMethods[propertyIndex](this, value);
        }

        #endregion |   Protected Abstract Overriden Methods  |
    }

    #endregion |   Code Generated by Simple.Objects Code Generator   |
}
